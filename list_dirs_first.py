from pathlib import Path

# –°–ø–∏—Å–æ–∫ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
IGNORED_DIRS = {
    '.venv', '__pycache__', '.git', '.hg', '.svn',
    '.env', '.pyenv', 'env', 'venv', 'node_modules',
    '.idea', '.vscode', '.DS_Store'
}

# –ò–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
OUTPUT_FILE = "structure.md"

def list_directory_contents(path='.', indent=''):
    """
    –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –≤—ã–≤–æ–¥–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞—Ç–∞–ª–æ–≥–∞:
    - —Å–Ω–∞—á–∞–ª–∞ –≤—Å–µ –ø–∞–ø–∫–∏, –∑–∞—Ç–µ–º —Ñ–∞–π–ª—ã
    - –¥–ª—è –ø–∞–ø–æ–∫ load/tmp: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 —Ñ–∞–π–ª–∞, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–º–µ–Ω—è—é—Ç—Å—è –Ω–∞ ...
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É.
    """
    path = Path(path)
    name = path.name

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    items = sorted(path.iterdir(), key=lambda x: x.name)

    # –§–∏–ª—å—Ç—Ä—É–µ–º –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    filtered_items = [item for item in items if item.name not in IGNORED_DIRS]

    # –†–∞–∑–¥–µ–ª—è–µ–º –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã
    dirs = [item for item in filtered_items if item.is_dir()]
    files = [item for item in filtered_items if item.is_file()]

    output = ""

    # –í—ã–≤–æ–¥–∏–º –ø–∞–ø–∫–∏
    for d in dirs:
        output += f"{indent}+ üìÅ {d.name}/\n"
        output += list_directory_contents(d, indent + "  ")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤
    if name in ['load', 'tmp']:
        # –î–ª—è –ø–∞–ø–æ–∫ load/tmp ‚Äî –≤—ã–≤–æ–¥–∏–º –º–∞–∫—Å–∏–º—É–º 3 —Ñ–∞–π–ª–∞
        limited_files = files[:3]
        has_more = len(files) > 3

        for f in limited_files:
            output += f"{indent}  - üìÑ {f.name}\n"
        if has_more:
            output += f"{indent}  - ...\n"
    else:
        # –í—Å–µ —Ñ–∞–π–ª—ã –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–∞–ø–æ–∫
        for f in files:
            output += f"{indent}  - üìÑ {f.name}\n"

    return output

if __name__ == '__main__':
    print("–°–æ—Ö—Ä–∞–Ω—è—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞—Ç–∞–ª–æ–≥–æ–≤ –≤ —Ñ–∞–π–ª...\n")
    structure = list_directory_contents()

    with open(OUTPUT_FILE, 'w', encoding='utf-8') as f:
        f.write("# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞\n\n```\n")
        f.write(structure)
        f.write("\n```")

    print(f"‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª: `{OUTPUT_FILE}`")